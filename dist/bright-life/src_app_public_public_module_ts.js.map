{"version":3,"file":"src_app_public_public_module_ts.js","mappings":"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","sources":["./src/app/public/components/login/login.component.ts","./src/app/public/components/login/login.component.html","./src/app/public/components/register/register.component.ts","./src/app/public/components/register/register.component.html","./src/app/public/public-routing.module.ts","./src/app/public/public.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { empty } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { LOCALSTORAGE_TOKEN_KEY } from 'src/app/app.module';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  errorMessage: string = '';\r\n\r\n  loginForm: FormGroup = new FormGroup({\r\n    email: new FormControl(null, [Validators.required, Validators.email]),\r\n    password: new FormControl(null, [Validators.required])\r\n  });\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log( localStorage.getItem(LOCALSTORAGE_TOKEN_KEY) )\r\n    if (typeof localStorage.getItem(LOCALSTORAGE_TOKEN_KEY) != 'undefined' && localStorage.getItem(LOCALSTORAGE_TOKEN_KEY)) {\r\n      console.log('alrady log');\r\n      this.router.navigate(['/protected/']);\r\n    }\r\n  }\r\n\r\n\r\n  login() {\r\n    if (!this.loginForm.valid) {\r\n      return;\r\n    }\r\n    this.authService.login(this.loginForm.value).subscribe(\r\n      (res: any) => {\r\n        console.log(res.code);\r\n        if (res.code == 200) {\r\n          this.router.navigate(['/protected/']);\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n        this.errorMessage = error.error.msg;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"bg-homeIntro p-0 h-[100vh] grid w-full relative bg-no-repeat z-0 bg-contain bg-bottom pb-40 md:pb-[20%]\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card\">\r\n                    <div class=\"text-left mb-2\">\r\n                        <h1 class=\"login mb-1 text-purple-600\">login</h1>\r\n                        <h6 class=\"font-medium\">Don't have an account?\r\n                            <a routerLink=\"../register\" class=\"text-purple-400\">Sign up</a>\r\n                        </h6>\r\n                    </div>\r\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n\r\n                        <label class=\"text-rose-600\"\r\n                                *ngIf=\"errorMessage\">\r\n                                {{ errorMessage }}\r\n                            </label>\r\n\r\n                        <!-- email -->\r\n                        <div class=\"mb-3\">\r\n                            <div class=\"flex justify-between\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label \">Email address</label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.loginForm.get('email')?.touched && this.loginForm.get('email')?.hasError('required')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    email is required\r\n                                </label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.loginForm.get('email')?.touched && this.loginForm.get('email')?.hasError('email')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    must be valid email\r\n                                </label>\r\n                            </div>\r\n                            <input type=\"email\" class=\"form-control\" id=\"\" formControlName=\"email\" placeholder=\"email\">\r\n                            <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n                            <label class=\"text-rose-600\"\r\n                                *ngIf=\"loginForm.get('email')?.touched && this.loginForm.get('email')?.hasError('required')\">\r\n                                email is required\r\n                            </label>\r\n                            \r\n                            <label class=\"text-rose-600\"\r\n                            *ngIf=\"this.loginForm.get('email')?.touched && loginForm.get('email')?.hasError('email')\">\r\n                            must be valid email\r\n                        </label>\r\n                        </div>\r\n                        <!-- password -->\r\n                        <div class=\"mb-3\">\r\n                            <div class=\"flex justify-between\">\r\n                                <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.loginForm.get('password')?.touched && this.loginForm.get('password')?.hasError('required')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    password is required\r\n                                </label>\r\n                            </div>\r\n                            <input type=\"password\" class=\"form-control\" id=\"\" formControlName=\"password\"\r\n                                placeholder=\"password\">\r\n                        </div>\r\n                        <button type=\"submit\" [disabled]=\"!loginForm.valid\"\r\n                            class=\"inline-block px-6 py-2.5 bg-purple-600 text-white font-medium text-xs leading-5 uppercase rounded shadow-md hover:bg-purple-700 hover:shadow-lg focus:bg-purple-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-purple-800 active:shadow-lg transition duration-150 ease-in-out w-full \">\r\n                            login\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup = new FormGroup({\n    name: new FormControl(null, [Validators.required]),\n    last_name: new FormControl(null, [Validators.required]),\n    phone: new FormControl(null, [Validators.required]),\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, [Validators.required])\n  });\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  register() {\n    debugger\n    if (!this.registerForm.valid) {\n      return;\n    }\n    this.authService.register(this.registerForm.value).subscribe(\n      (res: any) => {\n        // console.log(res);\n        if (res.code == 200) {\n          this.router.navigate(['/protected/']);\n        }\n        else {\n          // alert(\"0\"+res.success)\n        }\n      },\n    );\n  }\n}\n","<div class=\"bg-homeIntro p-0 h-[100vh] grid w-full relative bg-no-repeat z-0 bg-contain bg-bottom pb-40 md:pb-[20%]\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <div class=\"card\">\r\n                    <div class=\"text-left mb-2\">\r\n                        <h1 class=\"login mb-1 text-purple-600\">Sign up</h1>\r\n                        <h6 class=\"font-medium\">Register Your self!\r\n                        </h6>\r\n                    </div>\r\n                    <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\r\n                        <!-- First name -->\r\n                        <div class=\"mb-3\">\r\n                            <div class=\"flex justify-between\">\r\n                                <label for=\"exampleInputPassword1\" class=\"form-label\">First Name</label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.registerForm.get('name')?.touched && this.registerForm.get('name')?.hasError('required')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    first name is required\r\n                                </label>\r\n                            </div>\r\n                            <input type=\"text\" placeholder=\"first name\" class=\"form-control\" id=\"exampleInputPassword1\"\r\n                                formControlName=\"name\">\r\n                        </div>\r\n                        <!-- Last name -->\r\n                        <div class=\"mb-3\">\r\n                            <div class=\"flex justify-between\">\r\n                                <label for=\"exampleInputPassword1\" class=\"form-label\">Last Name</label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.registerForm.get('last_name')?.touched && this.registerForm.get('last_name')?.hasError('required')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    last_name is required\r\n                                </label>\r\n                            </div>\r\n                            <input type=\"text\" placeholder=\"last name\" class=\"form-control\" id=\"exampleInputPassword1\"\r\n                                formControlName=\"last_name\">\r\n                        </div>\r\n                        <!-- mobile number -->\r\n                        <div class=\"mb-3\">\r\n                            <div class=\"flex justify-between\">\r\n                                <label for=\"exampleInputPassword1\" class=\"form-label\">Mopile Number</label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.registerForm.get('phone')?.touched && this.registerForm.get('phone')?.hasError('required')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    phone is required\r\n                                </label>\r\n                            </div>\r\n                            <input type=\"number\" placeholder=\"mopile number\" class=\"form-control\"\r\n                                id=\"exampleInputPassword1\" formControlName=\"phone\">\r\n\r\n                        </div>\r\n                        <!-- email address -->\r\n                        <div class=\"mb-3\">\r\n                            <div class=\"flex justify-between\">\r\n                                <label for=\"exampleInputEmail1\" class=\"form-label \">Email address</label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.registerForm.get('email')?.touched && this.registerForm.get('email')?.hasError('email')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    must be valid email\r\n                                </label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.registerForm.get('email')?.touched && this.registerForm.get('email')?.hasError('required')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    email is required\r\n                                </label>\r\n                            </div>\r\n                            <input type=\"email\" placeholder=\"email\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n                                aria-describedby=\"emailHelp\" formControlName=\"email\">\r\n                            <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n                        </div>\r\n                        <!-- password -->\r\n                        <div class=\"mb-3\">\r\n                            <div class=\"flex justify-between\">\r\n                                <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                                <label class=\"text-rose-600\"\r\n                                    *ngIf=\"this.registerForm.get('password')?.touched && this.registerForm.get('password')?.hasError('required')\">\r\n                                    <i class=\"fad fa-exclamation\"></i>\r\n                                    password is required\r\n                                </label>\r\n                            </div>\r\n                            <input type=\"password\" placeholder=\"password\" class=\"form-control\"\r\n                                id=\"exampleInputPassword1\" formControlName=\"password\">\r\n                        </div>\r\n                        <button type=\"submit\"\r\n                            class=\"inline-block px-6 py-2.5 bg-purple-600 text-white font-medium text-xs leading-5 uppercase rounded shadow-md hover:bg-purple-700 hover:shadow-lg focus:bg-purple-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-purple-800 active:shadow-lg transition duration-150 ease-in-out w-full \">\r\n                            signup</button>\r\n                        <h6 class=\"\">Already registerd?\r\n                            <a routerLink=\"/login\" class=\"text-purple-400\">login</a>\r\n                        </h6>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterComponent },\n  {\n    path: '**', redirectTo: 'login',\n    pathMatch: \"full\"\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PublicRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n\nimport { PublicRoutingModule } from './public-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    CommonModule,\n    PublicRoutingModule,\n    ReactiveFormsModule\n  ]\n})\nexport class PublicModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}